<?php

/**
 * Description of Entities
 *
 * @author chrisfreak
 */
class Entities extends CI_Model {
    public $found = false;
            
    public function __construct($bean = null) {
        if (isset($bean)) {
            if (is_array($bean) && count($bean) > 0) {
                $bean = $bean[0];
            }

            foreach ($bean as $key => $value) {
                if(property_exists($this, $key)) {                    
                    $this->$key = $value;
                    $this->found = true;   // Should be put after, to prevent overwrite
                }
            }
        }
        
        parent::__construct();
    }

    public function getRedbean() {
        $className = get_class($this);
        $obj = R::dispense(strtolower($className));
        foreach($this as $key => $value) {
            if ($key != 'id' && $key != 'found') {
                $obj->$key = $value;
            }
        }

        return $obj;
    }
    
    public function found() {
        return $this->found;
    }
    
    /**
     * Generate a list of entities
     * @param type $beans An array of beans generated by the query
     */
    public function listBeans($beans) {
        $className = get_class($this);
        $reflector = new ReflectionClass($className);
        $arr = array();
        
        // Invalid beans or empty array
        if (!is_array($beans) || count($beans) == 0) {
            array_push($arr, $reflector->newInstance());
            return $arr;
        }
        
        foreach($beans as $b) {
            $o = $reflector->newInstance($b);
            array_push($arr, $o);
        }
        
        return $arr;
    }
}

?>
